user nginx;
worker_processes 4;


pid /tmp/nginx.pid;

# limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

events {
  worker_connections 2048;
}


http {
  client_body_temp_path /tmp/client_temp;
  proxy_temp_path       /tmp/proxy_temp_path;
  fastcgi_temp_path     /tmp/fastcgi_temp;
  uwsgi_temp_path       /tmp/uwsgi_temp;
  scgi_temp_path        /tmp/scgi_temp;
  
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '[$time_local] $remote_addr "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log  main;
  error_log  /var/log/nginx/error.log   crit;

  sendfile on;

  keepalive_timeout 65;

  # proxy_cache_path /etc/nginx/cache levels=1:2 keys_zone=nuxt-cache:25m max_size=1g inactive=60m use_temp_path=off;

  map $sent_http_content_type $expires {
    "text/html" 1h;
    default 1h;
  }

  resolver 127.0.0.11 ipv6=off;
  resolver_timeout 5s;

  # ATTN: backend docker container
  
  upstream backend {
    server backend:30002 max_fails=0 fail_timeout=5s;
  }

  upstream game {
    server game:30003 max_fails=0 fail_timeout=5s;
  }

  # upstream contract {
  #   server contract:8545 max_fails=0 fail_timeout=5s;
  # }

  # redirect to https
  server {
    listen 80;
    listen [::]:80;
    # server_name ${DOMAIN} ~^.*$;
    server_name ~^.*$;
    return 301 https://$host$request_uri;
  }
  
  map $status $retry_after {
    default '';
    429 '120';
    521 '120';
    503 '120';
  }

  server {

    # listen 80       default_server;  
    # listen [::]:80   ipv6only=on;
    
    listen 443      ssl default_server http2;
    listen [::]:443  ssl ipv6only=on http2;
    server_name ~^.*$;
    
    recursive_error_pages on;

    # <self-signed-cert>
      # add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
      add_header X-Content-Type-Options nosniff;
      add_header X-Frame-Options DENY;
      ssl_certificate /etc/ssl/certs/${DOMAIN}.crt;
      ssl_certificate_key /etc/ssl/private/${DOMAIN}.key;
      ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
      resolver 8.8.8.8 8.8.4.4 valid=300s;
      ssl_dhparam /etc/ssl/private/${DOMAIN}.dhparam.pem;
      ssl_ecdh_curve secp384r1;
      ssl_prefer_server_ciphers on;
      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
      ssl_session_cache shared:SSL:50m;
      ssl_session_timeout 1d;
      ssl_session_tickets off;
      ssl_stapling on;
      ssl_stapling_verify on;
    # </self-signed-cert>

    gzip on;
    gzip_types text/plain application/xml text/css application/javascript;
    gzip_min_length 1000;

    # location /testnet {
    #   proxy_set_header   Host               $host;
    #   proxy_set_header   X-Real-IP          $remote_addr;
    #   proxy_set_header   X-Forwarded-Proto  $scheme;
    #   proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
    #   proxy_pass         http://contract;
    # }

    # STATIC
    location ~* \.(?:ico|gif|jpe?g|png|woff2?|eot|otf|ttf|svg)$ {
      expires $expires;
      add_header Pragma public;
      add_header Cache-Control "public, max-age=3600";
      try_files $uri $uri/ @backend;
    }

    location / {
      try_files "" @frontend;
    }

    location /api {
      add_header Retry-After $retry_after always;
      try_files "" @backend;
    }
    
    location @backend {
      
      add_header Last-Modified $date_gmt;
      add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
      if_modified_since off;
      expires off;
      etag off;
      proxy_no_cache 1;
      proxy_cache_bypass 1; 

      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
      add_header X-Frame-Options "SAMEORIGIN";

      proxy_redirect off;
      proxy_set_header Host         $host;
      proxy_set_header Upgrade      $http_upgrade;
      proxy_set_header Connection   'upgrade';

      proxy_set_header X-Real-IP          $remote_addr;
      proxy_set_header X-Forwarded-Host   $http_host;
      proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto  $scheme;
      proxy_set_header X-Nginx-Proxy      true;

      proxy_http_version 1.1;
      proxy_connect_timeout 90;
      proxy_send_timeout 90;
      proxy_read_timeout 90;
      proxy_buffer_size 16k;
      proxy_buffers 32 8k;
      proxy_busy_buffers_size 64k;

      proxy_pass http://backend;

      # proxy_intercept_errors on;
      # error_page 404 = @frontend;
    }
    
    charset utf-8;
    root /usr/share/nginx/html;
    index index.html;

    location @frontend {
      expires $expires;
      add_header Cache-Control "public, max-age=3600";
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
      add_header X-Frame-Options "SAMEORIGIN";
      try_files $uri $uri/ $uri/index.html /index.html =404;
    }
    
    location /ws {
      proxy_pass http://game;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
    }

    # error_page 404 /index.html;

  }
  



}
